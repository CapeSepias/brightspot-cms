.repeatableForm {
  > ol,
  > ul {
    counter-reset: item;
    list-style-type: none;
    margin-bottom: 6px;
    margin-left: 0;

    > li {
      background-color: rgba(255, 255, 255, 0.5);
      margin-bottom: 6px;
      position: relative;

      > .repeatableLabel {
        &:extend(.inputLabelLike all);

        cursor: pointer;
        left: 0;
        padding-left: 35px;
        padding-right: 45px;
        position: relative;

        &:before {
          color: rgba(0, 0, 0, 0.3);
          content: '\25bc';
          font-size: 80%;
          left: 5px;
          position: absolute;
        }

        &:after {
          content: counter(item) '.';
          counter-increment: item;
          left: 20px;
          position: absolute;
        }

        &:hover:before {
          color: rgba(0, 0, 0, 0.8);
        }
      }

      > .repeatablePreview {
        display: none;
        max-width: 100%;
      }

      > .objectInputs {
        &:extend(.inputLargeLike all);

        &:before {
          bottom: 15px;
          border-color: @color-heading;
          border-style: solid;
          border-width: 0 0 1px 1px;
          content: '';
          left: 15px;
          position: absolute;
          width: 7.5px;
          top: 0;
        }

        &.state-focus:before {
          border-color: @color-focus;
        }
      }

      > .removeButton {
        .icon;
        .icon-remove;
        .icon-only;
        .link;

        color: @color-remove;
        position: absolute;
        right: 5px;
        top: 4px;
      }

      .inputContainer:first-child {
        margin-top: 6px;
      }

      &.state-focus {
        > .repeatableLabel {
          .background-flat(@color-focus);
        }
      }

      &.collapsed {
        padding-bottom: 0;

        > .repeatableLabel {
          border-bottom-style: none;

          &:before {
            content: '\25ba';
            margin-right: 5px;
          }
        }

        > .repeatablePreview {
          display: block;
        }
      }

      &.toBeRemoved {
        padding-bottom: 0;

        > .repeatableLabel {
          border-bottom-style: none;
          color: @color-remove;
          margin-bottom: 0;
          text-decoration: line-through;

          &:before {
            visibility: hidden;
          }
        }

        > .removeButton {
          .icon;
          .icon-plus;
          color: @color-link-dark;
        }

        .previewable-image {
          opacity:0.5;
        }
      }
    }
  }

  > .addButtonContainer {
    overflow: hidden;

    > .addButton {
      &:extend(.link all);

      .icon;
      .icon-plus;

      float: left;
      margin-right: 15px;
      white-space: nowrap;
    }
  }

  &.state-disabled {
    .removeButton,
    .addButtonContainer {
      display: none;
    }
  }

  &.repeatableForm-previewable {
    @preview-counter: preview-counter;
    
    > ol,
    > ul {
      overflow: hidden;
      
      // For a numbered carousel create a CSS counter
      counter-reset: @preview-counter;

      > li {
        background: white;
        box-sizing: border-box;
        float: left;
        margin-right: 10px;
        width: 210px;
        padding:4px;
        padding-bottom:22px;
        border:1px solid #ccc;
        border-radius:2px;
        min-height:170px;
        
        counter-increment: @preview-counter;

        .previewable-image {
          width: 200px;
          height:150px;
          cursor: pointer;
          
          // Resize the image so it's largest dimension fills the tile completely
          // and keeps the correct aspect ratio.
          object-fit: cover;
        }

        .previewable-label {
          margin:2px 4px 8px;
          height:2.5em;
          overflow:hidden;
        }
        
        .previewable-label-prefix {
          font-weight:bold;
        }

        .previewable-controls {
          height:22px;
          position:absolute;
          width:208px;
          left:0;
          bottom:0;
          background-color:#f8f8f8;
        }

        .previewable-control-edit {
          .icon;
          .icon-pencil;
          .icon-only;
          position:absolute;
          right:30px;
          bottom:2px;
          cursor:pointer;
          color:#999;
        }
        
        > .repeatableLabel {
          box-sizing: border-box;
          overflow: hidden;
          padding-right: 30px;
          text-overflow: ellipsis;
          white-space: nowrap;
        }

        > .removeButton {
          .icon-only;

          left: auto;
          right: 8px;
          top:auto;
          bottom:2px;
          color:#999;
        }

        .inputLabel {
          display: block;
          float: none;
          margin: 0 0 5px 0;
          padding: 5px;
          width: auto;
        }

        .inputSmall {
          margin-left: 0;
          padding-left: 2px;
        }

        .inputNote {
          margin-left: 2px;
        }

        .objectId-select {
          width: 100%;
        }

        .objectId-edit {
          margin-left: 0;
        }

        &.collapsed {
          .inputLabel,
          .objectId-clear {
            display: none !important;
          }

          .objectId-select {
            @img-height: 100px;

            display: block;
            height: (@img-height + 2 * (@size-input-padding + @length-inputBorderWidth));

            img {
              height: @img-height;
            }
          }
        }

        &:before {
          content: counter(@preview-counter);
          position:absolute;
          top:10px;
          right:10px;
          padding:4px;
          background:rgba(64,64,64,0.7);
          border:2px solid white;
          border-radius:50%;
          color:white;
          min-width:12px;
          text-align:center;
          line-height:1;
          font-size:12px;
          font-weight:bold;
        }

      }
    }

    > [class^="action-"],
    > [class*=" action-"] {
      float: left;
      margin: 0 10px 0 0;
    }
  }
}

.repeatablePreviewControls {

  margin-bottom:.5em;
  
  .action-upload {
    margin-right:1em;
  }
  
}

.view-switcher {
  float:right;
}

.view-switcher-active {
    font-weight:bold;
    color:black;

    &:hover {
        text-decoration: none;
        color:black;
    }
}

.carousel-target {
  margin-top:1em;
}

.repeatableForm > ol > li.collapsed > .frame,
.repeatableForm > ul > li.collapsed > .frame {
  min-height: 0;
}
.repeatableForm > ol > li.collapsed .objectInputs,
.repeatableForm > ul > li.collapsed .objectInputs,
.repeatableForm > ol > li.collapsed .message,
.repeatableForm > ul > li.collapsed .message,
.repeatableForm > ol > li.collapsed .inputContainer,
.repeatableForm > ul > li.collapsed .inputContainer,
.repeatableForm > ol > li.toBeRemoved .objectInputs,
.repeatableForm > ul > li.toBeRemoved .objectInputs,
.repeatableForm > ol > li.toBeRemoved .message,
.repeatableForm > ul > li.toBeRemoved .message,
.repeatableForm > ol > li.toBeRemoved .inputContainer,
.repeatableForm > ul > li.toBeRemoved .inputContainer {
  display: none;
}

.repeatableForm {
  > ol,
  > ul {
    > li {
      > .objectInputs > .tabs {
        margin-left: -7px;
        margin-right: -7px;
      }

      &.collapsed,
      &.toBeRemoved {
        .inputContainer-bulkUpload,
        .inputContainer-expanded {
          display: block;
        }
      }
    }
  }
}

.repeatableInputs {
  > ul {
    list-style: none;
    margin-left: 0;
  }

  > ol,
  > ul {
    margin-bottom: 0;

    > li {
      background-color: white;
      border-bottom: 1px solid @color-note;
      margin-bottom: 10px;
      position: relative;

      > .removeButton {
        .icon;
        .icon-remove;
        .link;
        bottom: 0;
        color: @color-remove;
        position: absolute;
        right: 0;
      }

      &.toBeRemoved > .removeButton {
        .icon;
        .icon-plus;
        color: @color-link-dark;
      }
    }
  }

  .addButtonContainer {
    margin-top: 5px;

    > .addButton {
      &:extend(.link all);

      .icon;
      .icon-plus;

      margin-right: 15px;
    }
  }

  &.state-disabled {
    .removeButton,
    .addButtonContainer {
      display: none;
    }
  }
}

.addButtonContainer {
  margin-top: 5px;

  > .addButton {
    &:extend(.link all);

    .icon;
    .icon-plus;

    margin-right: 15px;
  }
}

.repeatableLayout {
  > ol,
  > ul {
    list-style-position: inside;
    margin-bottom: 6px;
    margin-left: 0;

    > li {
      background-color: rgba(255, 255, 255, 0.5);
      border: 1px solid @color-alt;
      margin-bottom: 6px;
      padding: 0 6px;
      position: relative;

      > .repeatableLabel {
        .background-flat(@color-alt);

        cursor: pointer;
        left: 0;
        margin: 0 -6px 6px -6px;
        min-height: 22px;
        padding: 3px 5px;
      }

      > .layouts {
        margin-bottom: 4px;
      }

      > .removeButton {
        .icon;
        .icon-remove;
        .icon-only;
        .link;

        color: @color-remove;
        position: absolute;
        right: 5px;
        top: 4px;
      }

      &.state-focus {
        border-color: @color-link-light;

        > .repeatableLabel {
          background-color: @color-link-light;
        }
      }

      &.toBeRemoved {
        border-color: #fdd;
        padding-bottom: 0;

        > .repeatableLabel {
          border-bottom-style: none;
          color: @color-remove;
          margin-bottom: 0;
          text-decoration: line-through;

          &:before {
            visibility: hidden;
          }
        }

        > .layouts {
          display: none;
        }

        > .removeButton {
          .icon;
          .icon-plus;
          color: @color-link-dark;
        }
      }
    }
  }

  > .addButtonContainer {
    overflow: hidden;

    > .addButton {
      &:extend(.link all);

      .icon;
      .icon-plus;

      float: left;
      margin-right: 15px;
      white-space: nowrap;
    }
  }

  &.state-disabled {
    .removeButton,
    .addButtonContainer {
      display: none;
    }
  }
}

.repeatableObjectId {
  > ol,
  > ul {
    margin-bottom: 0;

    &:not(:empty) {
      margin-bottom: 10px;
    }

    > li {
      margin-bottom: 5px;
      white-space: nowrap;

      > .removeButton {
        .icon;
        .icon-remove;
        .link;
        color: @color-remove;
        margin-left: 10px;

        @media @media-tablet {
          .icon-only;

          margin-left: 5px;
        }
      }

      &.toBeRemoved {
        > .removeButton {
          .icon;
          .icon-plus;
          color: @color-link-dark;
        }

        .objectId-select {
          color: @color-remove;
          text-decoration: line-through;

          &:before,
          &:after {
            visibility: hidden !important;
          }

          img {
            opacity: 0.5;
          }
        }

        .objectId-edit {
          color: @color-remove;
          text-decoration: line-through;
        }
      }
    }
  }

  > [class^="action-"],
  > [class*=" action-"] {
    float: left;
    margin: 5px 10px 0 0;
  }

  > .addButtonContainer {
    margin-top: 5px;

    .addButton {
      &:extend(.link all);

      .icon;
      .icon-plus;
    }
  }

  &.repeatableObjectId-previewable {
    > ol,
    > ul {
      list-style-type: none;
      margin-left: 0;
      overflow: hidden;

      > li {
        background-color: darken(white, 3%);
        border: 1px solid darken(white, 20%);
        border-radius: 2px;
        box-sizing: border-box;
        float: left;
        margin: 0 10px 10px 0;
        padding: 4px;
        position: relative;
        width: 210px;

        .objectId-select {
          background-color: white;
          border: none;
          box-sizing: border-box;
          display: block;
          margin: -4px -4px 0 -4px;
          padding: 4px 4px 10px 4px;
          width: auto;

          figure {
            width: 100%;
          }

          &:before,
          &:after {
            display: none;
          }
        }

        .objectId-edit,
        .removeButton {
          .icon-only;
        }

        .removeButton {
          float: right;
        }
      }
    }

    > ol {
      counter-reset: listItem;

      > li {
        &:before {
          @length-size: 20px;

          .background-flat(fade(black, 60%));

          border: 2px solid white;
          border-radius: @length-size;
          counter-increment: listItem;
          content: counter(listItem);
          height: @length-size;
          line-height: @length-size;
          position: absolute;
          right: 10px;
          text-align: center;
          top: 10px;
          width: @length-size;
          z-index: 1;
        }
      }
    }
  }

  &.state-disabled {
    .removeButton,
    .addButtonContainer {
      display: none;
    }
  }
}

.repeatableText {
  @-length-buttonOffset: (@length-inputHeight - @length-iconSize) / 2;

  > ol, > ul {
    margin-bottom: 0;

    > li {
      float: left;
      margin-bottom: 5px;
      position: relative;

      > input[type=text] {
        padding-right: @length-inputHeight;
      }

      > .removeButton {
        .icon;
        .icon-remove;
        .link;

        color: @color-remove;
        position: absolute;
        right: @-length-buttonOffset;
        top: @-length-buttonOffset;
        user-select: none;
      }

      &.toBeRemoved {
        > input[type='text'] {
          color: @color-remove;
          text-decoration: line-through;
        }

        > .removeButton {
          .icon;
          .icon-plus;

          color: @color-link-dark;
        }
      }
    }
  }

  > ol {
    float: left;
    width: 100%;

    > li {
      clear: left;
      white-space: nowrap;
    }
  }

  > ul {
    list-style-type: none;
    margin-left: 0;
    overflow: hidden;

    > li {
      margin-right: 5px;
    }
  }

  .addButtonContainer {
    float: left;
    position: relative;

    > input[type=text] {
      padding-right: 20px;
    }

    > .addButton {
      &:extend(.link all);

      .icon;
      .icon-plus;

      position: absolute;
      right: @-length-buttonOffset;
      top: @-length-buttonOffset;
    }
  }

  &.state-disabled {
    .removeButton,
    .addButtonContainer {
      display: none;
    }
  }
}

.inputContainer {
    &.state-disabled {
        .removeButton,
        .addButtonContainer {
          display: none;
        }
    }
}
