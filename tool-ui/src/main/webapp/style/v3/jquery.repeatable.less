
.embedded-object-preview {
    &:extend(.objectId-select all);
}

.embedded-object-edit {
    &:extend(.objectId-edit all);
}

.embedded-object-clear {
    &:extend(.objectId-clear all);
}

.repeatableForm {
  > ol,
  > ul {
    counter-reset: item;
    list-style-type: none;
    margin-bottom: 6px;
    margin-left: 0;

    > li {
      background-color: rgba(255, 255, 255, 0.5);
      margin-bottom: 6px;
      position: relative;

      > .repeatableLabel {
        &:extend(.inputLabelLike all);

        cursor: pointer;
        left: 0;
        padding-left: 35px;
        padding-right: 45px;
        position: relative;

        &:before {
          color: rgba(0, 0, 0, 0.3);
          content: '\25bc';
          font-size: 80%;
          left: 5px;
          position: absolute;
        }

        &:after {
          content: counter(item) '.';
          counter-increment: item;
          left: 20px;
          position: absolute;
        }

        &:hover:before {
          color: rgba(0, 0, 0, 0.8);
        }
      }

      > .objectInputs {
        &:extend(.inputLargeLike all);

        &:before {
          bottom: 15px;
          border-color: @inputLabel-background;
          border-style: solid;
          border-width: 0 0 1px 1px;
          content: '';
          left: 15px;
          position: absolute;
          width: 7.5px;
          top: 0;
        }

        &.state-focus:before {
          border-color: @inputLabel-background-focus;
        }
      }

      > .removeButton {
        .icon;
        .icon-remove;
        .icon-only;
        .link;

        color: @color-alert;
        position: absolute;
        right: 5px;
        top: 4px;
      }

      .inputContainer:first-child {
        margin-top: 6px;
      }

      &.state-focus {
        > .repeatableLabel {
          background: @inputLabel-background-focus;
          color: @inputLabel-color-focus;
        }
      }

      &.collapsed {
        padding-bottom: 0;

        > .repeatableLabel {
          border-bottom-style: none;

          &:before {
            content: '\25ba';
            margin-right: 5px;
          }
        }
      }

      &.toBeRemoved {
        border-color: #fdd;
        padding-bottom: 0;

        > .repeatableLabel {
          background-color: #fdd;
          border-bottom-style: none;
          color: @color-alert;
          margin-bottom: 0;
          text-decoration: line-through;

          &:before {
            visibility: hidden;
          }
        }

        > .removeButton {
          .icon;
          .icon-plus;
          color: @color-link;
        }
      }
    }
  }

  > .addButtonContainer {
    overflow: hidden;

    > .addButton {
      &:extend(.link all);

      .icon;
      .icon-plus;

      float: left;
      margin-right: 15px;
      white-space: nowrap;
    }
  }

  &.state-disabled {
    .removeButton,
    .addButtonContainer {
      display: none;
    }
  }

  &.repeatableForm-previewable {

    @listItem-margin: 10px;
    @listItem-markerSize: 20px;
    > ol,
    > ul {
      overflow: hidden;

      > li {
        background: @color-background;
        box-sizing: border-box;
        float: left;
        margin-right: 1%;
        width: 24%;

        &:nth-child(4n+1) {
          clear: left;
        }

        > .repeatableLabel {
          box-sizing: border-box;
          overflow: hidden;
          padding-right: 30px;
          text-overflow: ellipsis;
          white-space: nowrap;
        }

        > .removeButton {
          .icon-only;

          left: auto;
          right: 5px;
        }

        .inputLabel {
          display: block;
          float: none;
          margin: 0 0 5px 0;
          padding: 5px;
          width: auto;
        }

        .inputSmall {
          margin-left: 0;
          padding-left: 2px;
        }

        .inputNote {
          margin-left: 2px;
        }

        .objectId-select {
          width: 100%;
        }

        .objectId-edit {
          margin-left: 0;
        }

        &.collapsed {
          .inputLabel,
          .objectId-clear {
            display: none !important;
          }

          .objectId-select {
            @img-height: 100px;

            display: block;
            height: (@img-height + 2 * (@size-input-padding + @size-input-border));

            img {
              height: @img-height;
            }
          }
        }
      }
    }

    > [class^="action-"],
    > [class*=" action-"] {
      float: left;
      margin: 0 10px 0 0;
    }

    &.repeatableForm-popup {

      @size-input-border: 0;
      @listItem-margin: 6px;

      .objectInputs {
        display: none;
      }
      > ol, > ul {
        > li {
          &[data-embedded-popup][data-preview] {

            @img-height: 150px;
            @preview-width: 270px;

            max-width: @preview-width;

            > .removeButton {

              position: static;
              .icon;
              .link;
              .icon-minus-sign;
              color: @color-alert;
              margin-left: 10px;

              @media @media-tablet {
                  .icon-only;
                  margin-left: 5px;
              }
            }

            > .embedded-object-preview {

              display: inline-block;
              width: 100%;
                height: auto;

              &:before {
                display: none;
              }

              > figure {
                height: @img-height;
                display: inline-block;
                min-width: 0;
                width: 100%;
                overflow: hidden;
                text-align: center;

                > img {
                  height: @img-height;
                  display: inline-block;
                  max-width: 100%;
                }
              }
            }

            // empty preview display for embedded object preview
            &[data-preview=""] {
                > .embedded-object-preview {
                    > figure {
                        > img {
                            width: @img-height;
                            visibility: hidden;
                        }
                    }
                }
            }
            > .embedded-object-edit {
              &:extend(.link all);
            }
            &:nth-child(4n+1) {
              clear: none;
            }

            // .toBeRemoved from .repeatable-form li and .objectId-select
            &.toBeRemoved {

              // similar to .objectId-select
              > .embedded-object-preview {
                background-color: #fdd;
                color: @color-alert;
                text-decoration: line-through;

                &:before,
                &:after {
                  visibility: hidden !important;
                }

                img {
                  opacity: 0.5;
                }
              }

              .embedded-object-edit {
                color: @color-alert;
                text-decoration: line-through;
              }

              > .removeButton {
                .icon-plus-sign;
                color: @color-link;
              }
            }
          }
        }
      }
        > ol {

            list-style-type: none;
            margin-left: 0;
            overflow: hidden;
            counter-reset: listItem;

            > li {

                > .repeatableLabel {
                    &:before {
                        display: none;
                    }
                    &:after {
                        content: counter(listItem);
                        counter-increment: listItem;
                        left: 10px;
                    }
                    padding-left: 35px;
                }

                &[data-preview] {
                    &:extend(.repeatableObjectId.repeatableObjectId-previewable > ol > li all);
                }
            }
        }
    }
  }
}

.popup[data-popup-source-class~="embedded-object-edit-popup"] {

  @nav-width: 60px;

  > .content {
    padding-left: @nav-width + 10px;
    padding-right: @nav-width + 10px;
  }

  .objectInputs {
      > .nextObject, > .previousObject {
          .link;
          .icon;
          height: 100%;
          position: absolute;
          top: 0;
          display: none;
          font-size: 80px;
          color: @color-background;
          background-color: @color-link;
          width: @nav-width;
          &:hover {
              color: @color-background;
              background-color: @color-link;
          }
          &:before {
              padding: 0;
              line-height: 1em;
              position: relative;
              top: 44%;
              width: 100%;
              transform: scaleY(2.0);
          }
      }
      > .nextObject {
          right: 0;
          .icon-angle-right;
      }

      > .previousObject {
          left: 0;
          .icon-angle-left;
      }
  }

  &.hasNext .objectInputs > .nextObject,
  &.hasPrevious .objectInputs > .previousObject {

      display: inline-block;
  }
}

.repeatableForm > ol > li.collapsed > .frame,
.repeatableForm > ul > li.collapsed > .frame {
  min-height: 0;
}
.repeatableForm > ol > li.collapsed .objectInputs,
.repeatableForm > ul > li.collapsed .objectInputs,
.repeatableForm > ol > li.collapsed .message,
.repeatableForm > ul > li.collapsed .message,
.repeatableForm > ol > li.collapsed .inputContainer,
.repeatableForm > ul > li.collapsed .inputContainer,
.repeatableForm > ol > li.toBeRemoved .objectInputs,
.repeatableForm > ul > li.toBeRemoved .objectInputs,
.repeatableForm > ol > li.toBeRemoved .message,
.repeatableForm > ul > li.toBeRemoved .message,
.repeatableForm > ol > li.toBeRemoved .inputContainer,
.repeatableForm > ul > li.toBeRemoved .inputContainer {
  display: none;
}

.repeatableForm {
  > ol,
  > ul {
    > li {
      > .objectInputs > .tabs {
        margin-left: -7px;
        margin-right: -7px;
      }

      &.collapsed,
      &.toBeRemoved {
        .inputContainer-bulkUpload,
        .inputContainer-expanded {
          display: block;
        }
      }
    }
  }
}

.repeatableInputs {
  > ul {
    list-style: none;
    margin-left: 0;
  }

  > ol,
  > ul {
    margin-bottom: 0;

    > li {
      background-color: @color-background;
      border-bottom: 1px solid @color-note;
      margin-bottom: 10px;
      position: relative;

      > .removeButton {
        .icon;
        .icon-remove;
        .link;
        bottom: 0;
        color: @color-alert;
        position: absolute;
        right: 0;
      }

      &.toBeRemoved > .removeButton {
        .icon;
        .icon-plus;
        color: @color-link;
      }
    }
  }

  .addButtonContainer {
    margin-top: 5px;

    > .addButton {
      &:extend(.link all);

      .icon;
      .icon-plus;

      margin-right: 15px;
    }
  }

  &.state-disabled {
    .removeButton,
    .addButtonContainer {
      display: none;
    }
  }
}

.repeatableLayout {
  > ol,
  > ul {
    list-style-position: inside;
    margin-bottom: 6px;
    margin-left: 0;

    > li {
      background-color: rgba(255, 255, 255, 0.5);
      border: 1px solid @color-alt;
      margin-bottom: 6px;
      padding: 0 6px;
      position: relative;

      > .repeatableLabel {
        .background-color(@color-alt);

        cursor: pointer;
        left: 0;
        margin: 0 -6px 6px -6px;
        min-height: 22px;
        padding: 3px 5px;
      }

      > .layouts {
        margin-bottom: 4px;
      }

      > .removeButton {
        .icon;
        .icon-remove;
        .icon-only;
        .link;

        color: @color-alert;
        position: absolute;
        right: 5px;
        top: 4px;
      }

      &.state-focus {
        border-color: @color-link-lighter;

        > .repeatableLabel {
          background-color: @color-link-lighter;
        }
      }

      &.toBeRemoved {
        border-color: #fdd;
        padding-bottom: 0;

        > .repeatableLabel {
          background-color: #fdd;
          border-bottom-style: none;
          color: @color-alert;
          margin-bottom: 0;
          text-decoration: line-through;

          &:before {
            visibility: hidden;
          }
        }

        > .layouts {
          display: none;
        }

        > .removeButton {
          .icon;
          .icon-plus;
          color: @color-link;
        }
      }
    }
  }

  > .addButtonContainer {
    overflow: hidden;

    > .addButton {
      &:extend(.link all);

      .icon;
      .icon-plus;

      float: left;
      margin-right: 15px;
      white-space: nowrap;
    }
  }

  &.state-disabled {
    .removeButton,
    .addButtonContainer {
      display: none;
    }
  }
}

.repeatableObjectId {
  > ol,
  > ul {
    margin-bottom: 0;

    &:not(:empty) {
      margin-bottom: 10px;
    }

    > li {
      margin-bottom: 5px;
      white-space: nowrap;

      > .removeButton {
        .icon;
        .icon-remove;
        .link;
        color: @color-alert;
        margin-left: 10px;

        @media @media-tablet {
          .icon-only;

          margin-left: 5px;
        }
      }

      &.toBeRemoved {
        > .removeButton {
          .icon;
          .icon-plus;
          color: @color-link;
        }

        .objectId-select {
          background-color: #fdd;
          color: @color-alert;
          text-decoration: line-through;

          &:before,
          &:after {
            visibility: hidden !important;
          }

          img {
            opacity: 0.5;
          }
        }

        .objectId-edit {
          color: @color-alert;
          text-decoration: line-through;
        }
      }
    }
  }

  > [class^="action-"],
  > [class*=" action-"] {
    float: left;
    margin: 5px 10px 0 0;
  }

  > .addButtonContainer {
    margin-top: 5px;

    .addButton {
      &:extend(.link all);

      .icon;
      .icon-plus;
    }
  }

  &.repeatableObjectId-previewable {
    > ol,
    > ul {
      list-style-type: none;
      margin-left: 0;
      overflow: hidden;

      > li {
        background-color: darken(white, 3%);
        border: 1px solid darken(white, 20%);
        border-radius: 2px;
        box-sizing: border-box;
        float: left;
        margin: 0 10px 10px 0;
        padding: 4px;
        position: relative;
        width: 210px;

        .objectId-select {
          background-color: white;
          border: none;
          box-sizing: border-box;
          display: block;
          margin: -4px -4px 0 -4px;
          padding: 4px 4px 10px 4px;
          width: auto;

          figure {
            width: 100%;
          }

          &:before,
          &:after {
            display: none;
          }
        }

        .objectId-edit,
        .removeButton {
          .icon-only;
        }

        .removeButton {
          float: right;
        }
      }
    }

    > ol {
      counter-reset: listItem;

      > li {
        &:before {
          @length-size: 20px;

          .background-color(fade(black, 60%));

          border: 2px solid white;
          border-radius: @length-size;
          counter-increment: listItem;
          content: counter(listItem);
          height: @length-size;
          line-height: @length-size;
          position: absolute;
          right: 10px;
          text-align: center;
          top: 10px;
          width: @length-size;
          z-index: 1;
        }
      }
    }
  }

  &.state-disabled {
    .removeButton,
    .addButtonContainer {
      display: none;
    }
  }
}

.repeatableText {
  @-length-buttonOffset: (@length-inputHeight - @length-iconSize) / 2;

  > ol, > ul {
    margin-bottom: 0;

    > li {
      float: left;
      margin-bottom: 5px;
      position: relative;

      > input[type=text] {
        padding-right: @length-inputHeight;
      }

      > .removeButton {
        .icon;
        .icon-remove;
        .link;

        color: @color-alert;
        position: absolute;
        right: @-length-buttonOffset;
        top: @-length-buttonOffset;
        user-select: none;
      }

      &.toBeRemoved {
        > input[type='text'] {
          color: @color-alert;
          text-decoration: line-through;
        }

        > .removeButton {
          .icon;
          .icon-plus;

          color: @color-link;
        }
      }
    }
  }

  > ol {
    float: left;
    width: 100%;

    > li {
      clear: left;
      white-space: nowrap;
    }
  }

  > ul {
    list-style-type: none;
    margin-left: 0;
    overflow: hidden;

    > li {
      margin-right: 5px;
    }
  }

  .addButtonContainer {
    float: left;
    position: relative;

    > input[type=text] {
      padding-right: 20px;
    }

    > .addButton {
      &:extend(.link all);

      .icon;
      .icon-plus;

      position: absolute;
      right: @-length-buttonOffset;
      top: @-length-buttonOffset;
    }
  }

  &.state-disabled {
    .removeButton,
    .addButtonContainer {
      display: none;
    }
  }
}

.inputContainer {
    &.state-disabled {
        .removeButton,
        .addButtonContainer {
          display: none;
        }
    }
}
